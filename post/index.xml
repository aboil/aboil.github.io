<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jianbiao Li</title>
    <link>https://aboil.github.io/post/</link>
    <description>Recent content in Posts on Jianbiao Li</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 16 Nov 2020 22:50:54 +0800</lastBuildDate><atom:link href="https://aboil.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>知你所想</title>
      <link>https://aboil.github.io/p/%E7%9F%A5%E4%BD%A0%E6%89%80%E6%83%B3/</link>
      <pubDate>Mon, 16 Nov 2020 22:50:54 +0800</pubDate>
      
      <guid>https://aboil.github.io/p/%E7%9F%A5%E4%BD%A0%E6%89%80%E6%83%B3/</guid>
      <description>关于我</description>
    </item>
    
    <item>
      <title>基于hugo搭建个人主页</title>
      <link>https://aboil.github.io/p/%E5%9F%BA%E4%BA%8Ehugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Mon, 16 Nov 2020 17:09:51 +0800</pubDate>
      
      <guid>https://aboil.github.io/p/%E5%9F%BA%E4%BA%8Ehugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/</guid>
      <description>开始前的准备
   安装hugo	（下面有介绍）
  安装配置好git
  准备好github账号
  Markdown编辑器：如Typora
   1、安装Hugo hugo算是免安装的，简单来说就行下载安装包，解压后，将其主程序所在的路径加到环境变量中即可。
 安装包下载地址： GitHub 仓库 找到相应版本下载即可。我使用的是 hugo_extended_0.78.2_Windows-64bit.zip 这个版本。下载解压后，将其主程序所在的路径添加到 Windows 的系统环境变量的 PATH 中即可，不需安装。 验证：在cmd窗口中输入：hugo version，会出现一行类似：Hugo Static Site Generator v0.78.2/extended windows/amd64 BuildDate: unknown 就表明安装正确。  Hugo官网： https://gohugo.io Hugo中文文档： https://www.gohugo.org/
2、创建站点 在工作目录下按下右键，选择右键菜单中的 Git Bash Here，创建一个名为 myblogsite 的站点，输入以下指令：
$ hugo new site myblogsite $ cd myblogsite 3、添加主题Themes hugo有很多主题模板，可以下载一个，地址为：https://themes.gohugo.io/  ，这里我选择的是Stack 主题（地址）。
用git命令将主题下载到 myblogsite/themes/hugo-theme-stack/目录下：
$ git clone https://github.</description>
    </item>
    
    <item>
      <title>解决VS Code安装Code Runner插件后，输出窗口中文乱码问题（Python）</title>
      <link>https://aboil.github.io/p/%E8%A7%A3%E5%86%B3vs-code%E5%AE%89%E8%A3%85code-runner%E6%8F%92%E4%BB%B6%E5%90%8E%E8%BE%93%E5%87%BA%E7%AA%97%E5%8F%A3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98python/</link>
      <pubDate>Sun, 11 Oct 2020 15:38:53 +0800</pubDate>
      
      <guid>https://aboil.github.io/p/%E8%A7%A3%E5%86%B3vs-code%E5%AE%89%E8%A3%85code-runner%E6%8F%92%E4%BB%B6%E5%90%8E%E8%BE%93%E5%87%BA%E7%AA%97%E5%8F%A3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98python/</guid>
      <description>问题描述 在没有安装Code Runner插件时，运行的代码是在 终端窗口 执行的，执行结果没有出现中文乱码。  安装完Code Runner插件后，运行结果会切换到在 输出窗口 显示执行结果，同时会出现中文乱码问题，如下：  下面有三种解决方法都能解决，推荐最后一种方法。
解决方法1 简言之，把执行结果再切换回终端窗口执行， 设置方法是在 设置 中勾选Run Terminal即可。再次运行时，执行结果会在 终端窗口 显示。  个人不太喜欢这种方法，还是喜欢想PyCharm那样在输出窗口显示执行结果，下面两种方法亲测可用，个人最喜欢最后一种解决方法。
解决方法2 简言之是在 python 代码的开头加上以下代码：
# -*-coding:utf-8 -*- import io import sys sys.stdout=io.TextIOWrapper(sys.stdout.buffer,encoding=&amp;#39;utf8&amp;#39;) 
解决方法3 简言之在setting.json中修改配置信息。 找到 python 并设置 set PYTHONIOENCODING=utf8 &amp;amp;&amp;amp; python，过程如下：
 首先打开setting.json文件。  然后修改python的编码格式：set PYTHONIOENCODING=utf8 &amp;amp;&amp;amp; python  
 再来看运行结果</description>
    </item>
    
    <item>
      <title>Chinese Test</title>
      <link>https://aboil.github.io/p/test-chinese/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aboil.github.io/p/test-chinese/</guid>
      <description>正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。
奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。
引用  思念是最暖的忧伤像一双翅膀
让我停不了飞不远在过往游荡
不告而别的你 就算为了我着想
这么沉痛的呵护 我怎么能翱翔
最暖的憂傷 - 田馥甄
 图片 Photo by Florian Klauer on Unsplash Photo by Luca Bravo on Unsplash</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://aboil.github.io/p/markdown-syntax-guide/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aboil.github.io/p/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://aboil.github.io/p/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aboil.github.io/p/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://aboil.github.io/p/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aboil.github.io/p/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://aboil.github.io/p/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aboil.github.io/p/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
